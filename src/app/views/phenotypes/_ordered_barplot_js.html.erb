var w = $(document).width()
var traces = []
<% h_dgrp_lines = {} %>
<% ordered_index.each_key do |s| %>
 <% x = [] %>
 <% y = [] %>
 <% ordered_index[params[:dgrp_order_barplot]].each do |i| %>
 <% d = dgrp_lines[i] %>
 <% h_dgrp_lines[d] = 1 %>
  <% x.push d %>
  <% y.push h_sum_values[s][d] %>
 <% end %>

var trace = {
y: <%= raw y.to_json %><%# raw (h_pheno[d]) ? h_pheno[d][phenotype.name].to_json : [] %>,
 x : <%= raw x.to_json %>,
 name : "<%= s %>",
 marker : {color: '<%= @h_sex_color[s] %>'},
 type: 'bar'
 };
 
traces.push(trace)
<% end %>

var dgrp_lines = <%= raw h_dgrp_lines.keys.to_json %>;

var font_size = (w / dgrp_lines.length) -2;
if (font_size < 6)
 font_size = 6
if (font_size > 12)
 font_size = 12 

//  console.log(((font_size+1) * dgrp_lines.length, $(window).width()-100))
//var width = Math.max((font_size+1) * dgrp_lines.length, $(window).width()-100)
  console.log(((font_size+1) * dgrp_lines.length, $("#container_ordered_barplot").width()-50))
  var width = Math.max((font_size+1) * dgrp_lines.length, $("#container_ordered_barplot").width()-100)
  
  var layout = {
  width : width,
title : 'Ordered barplot of <%= @list_sum_types[params[:displayed_sum_type].to_i] %> values',
yaxis : {title : "<%= raw phenotype.description.gsub(/(.{30,50}) /, '\1<br>').gsub(/\n/, '<br>').gsub(/"/, "\\\"") %>"},
xaxis : {
//showticklabels: (dgrp_lines.length > w * 60 / 1470) ? false : true
  showticklabels: true, tickfont: { size: font_size}, dtick: 1
},
boxmode: 'group'
}
  console.log("bla" + (w  * 60 / 1470))
    var opt = {
  modeBarButtonsToRemove: ['toImage', 'sendDataToCloud'],
  modeBarButtonsToAdd: [
  {
    name: 'Save PNG',
    icon: Plotly.Icons.camera,
    click: function(gd) {
      Plotly.downloadImage(gd, {format: 'png', width:width*2})
    }
  },
 {
    name: 'Save SVG',
    icon: Plotly.Icons.camera,
    click: function(gd) {
      Plotly.downloadImage(gd, {format: 'svg', width:width})
    }
  }]
}

  Plotly.newPlot('ordered_barplot', traces, layout, opt) /*.then(function(gd) {
            return Plotly.toImage(gd, {
                format: 'png',
                width: width
            });
        })
        .then(function(url) {
            var a = document.createElement('a');
            a.href = url;
            a.download = 'plot.png';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        })
        .catch(function(err) {
            console.error('Error:', err);
        });
*/
  /*.then(function(gd) {

 Plotly.toImage(gd, {
    format: 'png',
    width: 2400,  // specify the desired width
    height: 1600   // specify the desired height
  })
  .then(function(url) {
    var a = document.createElement('a');
    a.href = url;
    a.download = 'plot.png';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
  });
})*/
