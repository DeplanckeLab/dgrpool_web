<h1>Phenotype correlation</h1>


<%# @distinct_sex.to_json %>
<div class='alert alert-info'>
  For robustness of the results we restrict by default the available phenotypes to curated studies but if you prefer to be able to access the whole dataset that was automatically extracted, you can change this behaviour below.<br/>
  <%= check_box_tag 'only_integrated_studies', 1, ((params[:only_integrated_studies]=='1') ? true : false) %> Only curated studies
</div>

<div class='row'>
  <div class='col-md-6'>
    <div class="form-group row">
      <%= label_tag "Phenotype1", nil,  {:class => 'col-sm-2 col-form-label'} %>
      <div class="col-sm-10">
	<%= text_field_tag :phenotype_name1, params[:phenotype_name1] || '', {:placeholder => 'Phenotype name, description or study author', :class => 'form-control pheno_input'} %>
	<div id='phenotype_name2_container'></div>
	<%= hidden_field_tag :phenotype_id1, params[:phenotype_id1] || '' %>
	<div id='phenotype_description1'></div>
      </div>
    </div>
  </div>
  
  <div class='col-md-6'>
    <div class="form-group row">
      <%= label_tag "Phenotype2", nil,  {:class => 'col-sm-2 col-form-label'} %>
      <div class="col-sm-10">
        <%= text_field_tag :phenotype_name2, params[:phenotype_name2] || '', {:placeholder => 'Phenotype name, description or study author', :class => 'form-control pheno_input'} %>
	<div id='phenotype_name2_container'></div>
	<%= hidden_field_tag :phenotype_id2, params[:phenotype_id2] || '' %>
	<div id='phenotype_description2'></div>
      </div>
    </div>
  </div>
</div>

<div class='row'>
  <div class='col-md-6'>
    <div id='sex1_container' class="form-group row hidden">
      <%= label_tag "Sex phenotype1", nil,  {:class => 'col-sm-2 col-form-label'} %>
      <div class="col-sm-10">
        <% l = [] %>
        <%= select_tag 'sex1', options_for_select(l, (params[:sex1] || '')), {:class => 'form-select pheno_input'} %>
      </div>
    </div>
  </div>
  
  <div class='col-md-6'>
    <div id='sex2_container' class="form-group row hidden">
      <%= label_tag "Sex phenotype2", nil,  {:class => 'col-sm-2 col-form-label'} %>
      <div class="col-sm-10">
        <% l = [] %>
        <%= select_tag 'sex2', options_for_select(l, (params[:sex2] || '')), {:class => 'form-select pheno_input'} %>
      </div>
    </div>
  </div>
</div>

<div class='row'>  
  <div class='col-md-6'>
    <div id='data_source1_container' class="form-group row hidden">
      <%= label_tag "Data source", nil,  {:class => 'col-sm-2 col-form-label'} %>
      <div class="col-sm-10">
	<% l = [["Median", "median"], ["Mean", "mean"], ["Variance", "variance"], ["Standard deviation", "std_dev"], ["Standard error", "std_err"], ["Coefficient of variation", "cv"]] %>
	<%= select_tag 'data_source1', options_for_select(l, params[:data_source1]), {:class => 'form-select pheno_input'} %>
      </div>
    </div>
  </div>
  
  <div class='col-md-6'>
    <div id='data_source2_container' class="form-group row hidden">
      <%= label_tag "Data source", nil,  {:class => 'col-sm-2 col-form-label'} %>
      <div class="col-sm-10">
        <%= select_tag 'data_source2', options_for_select(l, params[:data_source2]), {:class => 'form-select pheno_input'} %>
      </div>
    </div>
  </div>
</div>
<div>
  <div class='col-md-6'>
    <button type='button' id='compare_btn' class='btn btn-primary' disabled="disabled">Compare</button>
  </div>
</div>

<div id='correlation_result'>
<%# image_tag 'heatmap.png', :width => '100%' %>
</div>


<%= javascript_tag do %>

// document.addEventListener('DOMContentLoaded', function () {

<% if params[:phenotype_name2] and params[:phenotype_name1] %>
$("#compare_btn").prop("disabled", false)
$("#compare_btn").click
<% end %>

$(".pheno_input").keyup(function(e){
 // prevent enter to submit the form
  if (e.key == 'Enter'){
   $("#compare_btn").click()
   e.preventDefault();
   return false
  }
  false;
});

function upd_sex_lists(sex_list, i){

//for (var i=1; i< 3; i++){
		 if ($("#phenotype_id" + i).val() != ''){
		 var mySelect = $('#sex' + i);
		  mySelect.empty()
if (sex_list.length > 1){
		   mySelect.append(
  $('<option></option>').val("").html("Matching sex"))
  }
 $.each(sex_list, function(i, val) {
 console.log(sex_list)
     mySelect.append(
         $('<option></option>').val(val).html(val)
     );
 });
  $('#sex' + i + '_container').removeClass("hidden")
		 }
//		 }
}

		   function check_form(){
		   if ($("#phenotype_id1").val() != '' && $("#phenotype_id2").val() != ''){
$("#compare_btn").prop("disabled", false)
		   }

		   }
		   
 $("#phenotype_name1").autocomplete({
  minLength: 0,
  appendTo: '#phenoty_name1_container',
classes: {
   "ui-autocomplete": "test_ui",
  },
html: true,
position: {
   offset: '0 0' // Shift 0px left, 4px down.
  },
  source: function(request, response) {
  $.ajax({
          url: "<%= autocomplete_phenotypes_path() %>",
          dataType: "json",
          beforeSend: function(){
         },
          data: {
		   q: request.term,
		   only_integrated_studies: ($("#only_integrated_studies").prop("checked") == true) ? '1' : '0',
		   is_numeric:1,
            phenotype_id: $("#phenotype_id2").val()//,
          },
          success: function( data ) {
		   response( data );
		   initTooltips()

          }
        });
  },
 select: function( event, ui ) {
console.log(ui.item.id)
$("#phenotype_name1").val((ui.item) ? ui.item.name : '')
$("#phenotype_id1").val((ui.item) ? ui.item.id : '')
$("#phenotype_description1").val((ui.item) ? ui.item.description : '')
upd_sex_lists(ui.item.sex_list, 1)
if (!ui.item || ui.item.is_summary == true){
$("#data_source1_container").addClass("hidden")
$("#data_source1").val("mean")
}else{
$("#data_source1_container").removeClass("hidden")
}
check_form()
		   return false
}
}).focus(function () {
    $(this).autocomplete("search");
}).click(function(){
    $(this).autocomplete("search");
});


 $("#phenotype_name2").autocomplete({
  minLength: 0,
  appendTo: '#phenoty_name2_container',
  classes: {
   "ui-autocomplete": "test_ui",
},
html: true,
  position: {
   offset: '0 0' // Shift 0px left, 4px down.
  },
  source: function(request, response) {
  $.ajax({
          url: "<%= autocomplete_phenotypes_path() %>",
          dataType: "json",
          beforeSend: function(){
         },
          data: {
		   q: request.term,
		   is_numeric: 1,
		    only_integrated_studies: ($("#only_integrated_studies").prop("checked") == true) ? '1' : '0',
            phenotype_id: $("#phenotype_id1").val()//,
          },
          success: function( data ) {
		   response( data );
		   initTooltips()
          }
        });
  },
 select: function( event, ui ) {
   console.log(ui.item.id)
$("#phenotype_name2").val((ui.item) ? ui.item.name : '')
$("#phenotype_id2").val((ui.item) ? ui.item.id : '')
$("#phenotype_description2").val((ui.item) ? ui.item.description : '')
upd_sex_lists(ui.item.sex_list, 2)
if (!ui.item || ui.item.is_summary == true){
$("#data_source2_container").addClass("hidden")
$("#data_source2").val("mean")
}else{
$("#data_source2_container").removeClass("hidden")
}
check_form()
		   return false;
}
}).focus(function () {
    $(this).autocomplete("search");
}).click(function(){
    $(this).autocomplete("search");
});



$("#compare_btn").click(function(){
var p = [{name : 'phenotype_id1', value : $("#phenotype_id1").val()},
{name : 'phenotype_id2', value : $("#phenotype_id2").val()},
{name : 'data_source1', value : $("#data_source1").val()},
		   {name : 'data_source2', value : $("#data_source2").val()},
		   {name : 'sex1', value : $("#sex1").val()},
		     {name : 'sex2', value : $("#sex2").val()},
]
refresh_post("correlation_result", "<%= compute_correlation_path %>", p, 'post', {loading:'fa-2x'})

})


//})

<% end %>
